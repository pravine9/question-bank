var t=Object.defineProperty,e=(e,n,s)=>((e,n,s)=>n in e?t(e,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[n]=s)(e,"symbol"!=typeof n?n+"":n,s);function n(){import.meta.url,import("_").catch(()=>1),async function*(){}().next()}import{e as s,g as a,f as o,q as r,E as c}from"./history-Dd79jojy.js";import{b as i,f as l}from"./banks-BqbVZJD4.js";const d=i;let u=!1,h=null;function m(t){const e=document.getElementById(t);if(!e)return null;const n=e.value;if(!n)return null;const s=d[n];return Array.isArray(s)&&s.length?{bank:n,files:s}:null}function y(){const t=m("bankSelect");if(!t)return void alert("Please select a question bank");const e=t.files[Math.floor(Math.random()*t.files.length)];!function(t){h=t;try{const t=document.getElementById("bankSelect");t&&t.value&&localStorage.setItem("lastBank",t.value)}catch(o){console.warn("Failed to save lastBank",o)}r&&r.renderQuestion(t,{text:"#qText",title:"#qTitle",img:"#qImg",options:"#answerOptions",input:".calculator",unit:"#answerUnit",feedback:"#feedback",answer:"#answer",explanation:"#explanation"});const e=document.getElementById("questionArea");e&&(e.style.display="block");const n=document.getElementById("feedback");n&&(n.textContent="",n.classList.remove("correct","incorrect"));const s=document.getElementById("answer"),a=document.getElementById("explanation");s&&(s.style.display="none",s.innerHTML="");a&&(a.style.display="none",a.innerHTML="")}(e[Math.floor(Math.random()*e.length)])}function v(){const t=m("bankSelect");if(!t)return void alert("Please select a question bank");const e=document.getElementById("numInput"),n=e&&parseInt(e.value)||10,s="practice_session_".concat(t.bank,"_").concat(n);if(sessionStorage.getItem(s)){if(confirm("You have an unfinished practice session for this bank. Would you like to resume where you left off?"))return void(window.location.href="practice.html?bank=".concat(encodeURIComponent(t.bank),"&num=").concat(n,"&resume=true"));sessionStorage.removeItem(s)}try{localStorage.setItem("lastBank",t.bank)}catch(a){console.warn("Failed to save lastBank",a)}window.location.href="practice.html?bank=".concat(encodeURIComponent(t.bank),"&num=").concat(n)}function f(){if(!h||!r)return;if("checked"===r.getCurrentDisplayState())r.displayAnswer(h,"hide");else{const t=function(){if(!h)return"";if(h.is_calculation){const t=document.getElementById("calcInput");return(null==t?void 0:t.value)||""}{const t=document.querySelector('input[name="answer"]:checked');return(null==t?void 0:t.value)||""}}();r.displayAnswer(h,"check",t)}}function p(){if(!h||!r)return;"revealed"===r.getCurrentDisplayState()?r.displayAnswer(h,"hide"):r.displayAnswer(h,"reveal")}window.evaluateAnswer=s,window.getCorrectAnswerText=a,window.formatExplanation=o;!function(){const t=document.getElementById("loadBtn");t&&t.addEventListener("click",y);const e=document.getElementById("practiceBtn");e&&e.addEventListener("click",v);const n=document.getElementById("checkBtn");n&&n.addEventListener("click",f);const s=document.getElementById("revealBtn");s&&s.addEventListener("click",p);const a=document.getElementById("statsModal");if(a&&a.classList.remove("show"),"true"===new URLSearchParams(window.location.search).get("isStandAlone")){document.body.classList.add("standalone");const t=document.querySelector(".container");t&&t.classList.add("standalone")}!function(t){if(u)return;const e=document.getElementById("bankSelect"),n=document.getElementById("statsBankSelect");if(!e&&!n)return void console.warn("Bank select elements not found");Object.keys(t).filter(e=>Array.isArray(t[e])).sort().forEach(t=>{if(e){const n=document.createElement("option");n.value=t,n.textContent=l(t),e.appendChild(n)}if(n){const e=document.createElement("option");e.value=t,e.textContent=l(t),n.appendChild(e)}}),u=!0}(d);try{const t=localStorage.getItem("lastBank");if(t){const e=document.getElementById("bankSelect");e&&d[t]&&(e.value=t)}}catch(o){console.warn("Failed to load lastBank",o)}r.initPdfViewer()}();(new class{constructor(){e(this,"container"),e(this,"history"),this.container=null,this.history=this.getPracticeHistory()}render(t){this.container=document.getElementById(t),this.container?(this.container.innerHTML=this.generateHTML(),this.attachEventListeners()):console.warn("Practice history container not found:",t)}generateHTML(){return 0===this.history.totalTests?'\n        <div class="practice-history-empty">\n          <div class="empty-state">\n            <div class="empty-icon">ðŸ“Š</div>\n            <h3>No Practice Tests Yet</h3>\n            <p>Complete your first practice test to see your results here!</p>\n            <button class="btn btn-primary" id="startFirstTest">Start Your First Test</button>\n          </div>\n        </div>\n      ':'\n      <div class="practice-history">\n        <div class="history-header">\n          <h2>ðŸ“Š Practice Test History</h2>\n          <button class="btn btn-secondary btn-sm" id="clearHistory">Clear History</button>\n        </div>\n\n        <div class="history-stats">\n          <div class="stat-card">\n            <div class="stat-number">'.concat(this.history.totalTests,'</div>\n            <div class="stat-label">Total Tests</div>\n          </div>\n          <div class="stat-card">\n            <div class="stat-number">').concat(this.history.averageScore,'%</div>\n            <div class="stat-label">Average Score</div>\n          </div>\n          <div class="stat-card">\n            <div class="stat-number">').concat(this.history.bestScore,'%</div>\n            <div class="stat-label">Best Score</div>\n          </div>\n          <div class="stat-card">\n            <div class="stat-number">').concat(Math.round(this.history.totalTime),'m</div>\n            <div class="stat-label">Total Time</div>\n          </div>\n        </div>\n      </div>\n    ')}attachEventListeners(){if(!this.container)return;const t=this.container.querySelector("#clearHistory");t&&t.addEventListener("click",()=>{confirm("Are you sure you want to clear all practice history? This cannot be undone.")&&(this.clearPracticeHistory(),this.history=this.getPracticeHistory(),this.render(this.container.id))});const e=this.container.querySelector("#startFirstTest");e&&e.addEventListener("click",()=>{const t=document.getElementById("practiceBtn");t&&t.scrollIntoView({behavior:"smooth"})})}getPracticeHistory(){try{const t=localStorage.getItem("practice_history");if(!t)return{...c};const e=JSON.parse(t);return this.calculateHistoryStats(e.results||[])}catch(t){return console.warn("Failed to load practice history:",t),{...c}}}calculateHistoryStats(t){const e=t.length,n=t.reduce((t,e)=>t+e.score,0),s=e>0?Math.round(n/e*100)/100:0,a=t.length>0?Math.max(...t.map(t=>t.score)):0,o=t.reduce((t,e)=>t+e.duration,0);return{results:t,totalTests:e,averageScore:s,bestScore:a,totalTime:o}}clearPracticeHistory(){try{localStorage.removeItem("practice_history"),this.history={...c}}catch(t){console.warn("Failed to clear practice history:",t)}}refresh(){this.history=this.getPracticeHistory(),this.container&&this.render(this.container.id)}}).render("practiceHistory");export{n as __vite_legacy_guard};
//# sourceMappingURL=main-C5d3rF6b.js.map
